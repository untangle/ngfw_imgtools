### Partitioning
# If the system has free space you can choose to only partition that space.
# Note: this must be preseeded with a localized (translated) value.
d-i partman-auto/init_automatically_partition \
select Guided - use entire disk

# Alternatively, you can specify a disk to partition. The device name must
# be given in traditional non-devfs format.
# For example, to use the first SCSI/SATA hard disk:
# Note: A disk must be specified, unless the system has only one disk.
#d-i partman-auto/disk string /dev/sda
# In addition, you'll need to specify the method to use.
# The presently available methods are: "regular", "lvm" and "crypto"
d-i partman-auto/method string regular

# If one of the disks that are going to be automatically partitioned
# contains an old LVM configuration, the user will normally receive a
# warning. This can be preseeded away...
#d-i partman-lvm/device_remove_lvm boolean true
# And the same goes for the confirmation to write the lvm partitions.
#d-i partman-lvm/confirm boolean true

# You can choose from any of the predefined partitioning recipes.
# Note: this must be preseeded with a localized (translated) value.
#d-i partman-auto/choose_recipe \
#       select All files in one partition (recommended for new users)
#d-i partman-auto/choose_recipe \
#       select Separate /home partition
#d-i partman-auto/choose_recipe \
#       select Separate /home, /usr, /var, and /tmp partitions

# Or provide a recipe of your own...
# The recipe format is documented in the file devel/partman-auto-recipe.txt.
# If you have a way to get a recipe file into the d-i environment, you can
# just point at it.
#d-i partman-auto/expert_recipe_file string /hd-media/recipe

# If not, you can put an entire recipe into the preconfiguration file in one
# (logical) line:
d-i partman-auto/expert_recipe string \
untangle :: \
5000 10000 80000 root \
$primary{ } \
$bootable{ } \
method{ format } \
format{ } \
use_filesystem{ } \
filesystem{ ext4 } \
mountpoint{ / } \
. \
1000 2000 300% swap \
$primary{ } \
method{ swap } \
format{ } \
. \
10 10 1000000000 data \
method{ format } \
format{ } \
use_filesystem{ } \
filesystem{ ext4 } \
mountpoint{ /data } \
.

d-i partman-auto/expert_recipe string \
untangle2 :: \
500 10000 1000000 ext4 \
$primary{ } \
$bootable{ } \
method{ format } \
format{ } \
use_filesystem{ } \
filesystem{ ext4 } \
mountpoint{ / } \
label{ NGFW_ROOT } \
. \
1000 2000 300% swap \
method{ swap } \
format{ } \
.

d-i partman-auto/expert_recipe string \
untangle-efi :: \
500 10000 1000000 ext4 \
$primary{ } \
$bootable{ } \
method{ format } \
format{ } \
use_filesystem{ } \
filesystem{ ext4 } \
mountpoint{ / } \
label{ NGFW_ROOT } \
. \
1000 2000 300% swap \
method{ swap } \
format{ } \
. \
512 512 512 fat32 \
$primary{ } \
method{ efi } \
format{ } \
.

d-i partman/early_command string \
mounts=$(mount | grep cdrom) \
count=0; \
candidate=""; \
for device in $(parted_devices | cut -f1); do \
  count=$(($count + 1)); \
  echo $mounts | grep -q $device; \
  if [ $? -eq 0 ] ; then \
    continue; \
  fi ; \
  candidate=$device ; \
done ; \
if [ $count -eq 2 ] ; then \
   debconf-set partman-auto/disk $candidate ; \
fi ; \
if [ -d "/sys/firmware/efi/" ] ; then \
	debconf-set partman-auto/choose_recipe select untangle-efi ; \
else \
	debconf-set partman-auto/choose_recipe select untangle2 ; \
fi ;
