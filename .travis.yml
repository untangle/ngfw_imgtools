if: branch =~ /^(master|((ngfw|waf)-)?release-\d+.\d)$/ AND type IN (push, cron, api) AND tag IS blank

git:
  depth: false

services:
- docker

env:
  global:
    # DOCKER_PASSWORD
    - secure: "GAew5U/YEjjE0pErO0fULKPwSRpBMcDTUU9UTnGnnfr0IMz8AsXnaN6p3ONcKtDFyLQWohhvHBME/JFSQif7CD471wK8szsaWqB7miiqQOTmqEFdoGtoHimXY/Ye9Lm7CaIjpr7VzsbAQ4eV5JupUumALflwS58n4rLo3jRL4dZfWltRYw6ouX1DO3h9CdV6OBhl0uvJvIqvRV81/+4gwQ4ElW3PiXSvKlLTrHArExjUqMqmEw9r6br3BE9vLCbEOQYDihGsknS6oDCr9kYS7INEZ9PhoFDpvoMwEEp3eKt2GKfW3oCewdUmVkgh0+TYpcA6p/4oy/XFuBXYrV7bjN9URonv7jn7OzB4tCRJ0V+IzwcmxvuSdfvaAXF69eqFFfFYln+sZS/Qv9Qs86O9TBbzyCn1mVrmIkxjcyf04ua6yf7f2gQ4tlMFbvbcLaZMqfkCoLgBOFPsd0VCDMwLkdjK4a29aNqitMSkFadrw1Y7Zfv3n0YRFJ/SdpJepzKep3X5HL8/g5+2b1C2rLALJmejuJBENo25XHTKAfC0p7hZ02Ic7nW+g16ZEgMkhBx+tPN/CpNedrmkELWN5y8isJQgiQ4BrIM3gdE9qh9KPfm5U1BFBU93p3l1fekwFjwhbPjOqhs06mvTYZoyfo8cORuNy+fMrFlSSFIp03jmoqY="
    - DOCKER_USERNAME: untangleengineering
      SSH_KEY: /tmp/travis-buildbot.rsa
      PACKAGE_SERVER_IP: 52.2.228.218
      REPOSITORY: buster
      PKGTOOLS_COMMIT: origin/${TRAVIS_BRANCH}
      IMG_MODIFIER_COMMIT: origin/${TRAVIS_BRANCH}
      UPLOAD: scp
      PRIVILEGED: true

before_install:
- echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
- docker pull untangleinc/ngfw:${REPOSITORY}-build-multiarch
- openssl aes-256-cbc -K $encrypted_404963842fb3_key -iv $encrypted_404963842fb3_iv -in .travis/buildbot.rsa.enc -out ${SSH_KEY} -d
- chmod 600 ${SSH_KEY}

jobs:
  include:
    - name: NGFW Untangle amd64
      if: NOT branch =~ /^waf-release-\d+.\d$/
      script:
        - docker-compose -f docker-compose.build.yml run pkgtools
        - NO_CLEAN=1 docker-compose -f docker-compose.build.yml run build
        - travis_wait 120 docker-compose -f docker-compose.build.yml run build bash -c "../ngfw_pkgtools/build.sh setup-only && make ${PRODUCT}/iso/${VENDOR}-image ${PRODUCT}/iso/${VENDOR}-push"
      env:
        - PRODUCT: ngfw
        - ARCHITECTURE: amd64
        - VENDOR: untangle

    - name: NGFW Untangle amd64 (serial)
      if: NOT branch =~ /^waf-release-\d+.\d$/
      script:
        - docker-compose -f docker-compose.build.yml run pkgtools
        - NO_CLEAN=1 docker-compose -f docker-compose.build.yml run build
        - travis_wait 120 docker-compose -f docker-compose.build.yml run build bash -c "../ngfw_pkgtools/build.sh setup-only && make ${PRODUCT}/iso/${VENDOR}-image ${PRODUCT}/iso/${VENDOR}-push"
      env:
        - PRODUCT: ngfw
        - ARCHITECTURE: amd64
        - VENDOR: untangle
        - SERIAL: ttyS0,115200

    - name: NGFW Untangle amd64 (EU)
      if: NOT branch =~ /^waf-release-\d+.\d$/
      script:
        - docker-compose -f docker-compose.build.yml run pkgtools
        - NO_CLEAN=1 docker-compose -f docker-compose.build.yml run build
        - travis_wait 120 docker-compose -f docker-compose.build.yml run build bash -c "../ngfw_pkgtools/build.sh setup-only && make ${PRODUCT}/iso/${VENDOR}-image ${PRODUCT}/iso/${VENDOR}-push"
      env:
        - PRODUCT: ngfw
        - ARCHITECTURE: amd64
        - VENDOR: untangle
        - REGION: eu

    - name: NGFW Untangle amd64 (EU, serial)
      if: NOT branch =~ /^waf-release-\d+.\d$/
      script:
        - docker-compose -f docker-compose.build.yml run pkgtools
        - NO_CLEAN=1 docker-compose -f docker-compose.build.yml run build
        - travis_wait 120 docker-compose -f docker-compose.build.yml run build bash -c "../ngfw_pkgtools/build.sh setup-only && make ${PRODUCT}/iso/${VENDOR}-image ${PRODUCT}/iso/${VENDOR}-push"
      env:
        - PRODUCT: ngfw
        - ARCHITECTURE: amd64
        - VENDOR: untangle
        - REGION: eu
        - SERIAL: ttyS0,115200

    - name: NGFW Vendor2 amd64
      if: NOT branch =~ /^waf-release-\d+.\d$/
      script:
        - docker-compose -f docker-compose.build.yml run pkgtools
        - rm -fr d-i/build/localudebs/*
        - docker-compose -f docker-compose.build.yml run img_modifier_checkout
        - docker-compose -f docker-compose.build.yml run img_modifier_apply
        - FORCE=1 NO_CLEAN=1 UPLOAD= docker-compose -f docker-compose.build.yml run build
        - travis_wait 120 docker-compose -f docker-compose.build.yml run build bash -c "../ngfw_pkgtools/build.sh setup-only && make ${PRODUCT}/iso/${VENDOR}-image ${PRODUCT}/iso/${VENDOR}-push"
      env:
        - PRODUCT: ngfw
        - ARCHITECTURE: amd64
        - VENDOR: vendor2
        - IMG_MODIFIER_VENDOR: vendor2

    - name: NGFW Vendor2 amd64 (serial)
      if: NOT branch =~ /^waf-release-\d+.\d$/
      script:
        - docker-compose -f docker-compose.build.yml run pkgtools
        - rm -fr d-i/build/localudebs/*
        - docker-compose -f docker-compose.build.yml run img_modifier_checkout
        - docker-compose -f docker-compose.build.yml run img_modifier_apply
        - FORCE=1 NO_CLEAN=1 UPLOAD= docker-compose -f docker-compose.build.yml run build
        - travis_wait 120 docker-compose -f docker-compose.build.yml run build bash -c "../ngfw_pkgtools/build.sh setup-only && make ${PRODUCT}/iso/${VENDOR}-image ${PRODUCT}/iso/${VENDOR}-push"
      env:
        - PRODUCT: ngfw
        - ARCHITECTURE: amd64
        - VENDOR: vendor2
        - IMG_MODIFIER_VENDOR: vendor2
        - SERIAL: ttyS0,115200

    - name: WAF Untangle amd64
      if: NOT branch =~ /^ngfw-release-\d+.\d$/
      script:
        - docker-compose -f docker-compose.build.yml run pkgtools
        - travis_wait 120 docker-compose -f docker-compose.build.yml run build bash -c "../ngfw_pkgtools/build.sh setup-only && make ${PRODUCT}/iso/${VENDOR}-image ${PRODUCT}/iso/${VENDOR}-push"
      env:
        - PRODUCT: waf
        - ARCHITECTURE: amd64
        - VENDOR: untangle
        - PKGTOOLS_REPOSITORY: pkgtools-waf
        - PKGTOOLS_COMMIT: origin/waf-${TRAVIS_BRANCH/waf-}

notifications:
  email: false
  slack:
    rooms:
      secure: plrP2XptL2y33ok5Wvp692FEcdffgQrp8J6Yw6B7sPXZ604ZArPe6K9BCpDzioPMDwOGeFKfKa+tB8yRjO1orKxRzOKbZgO0qI4Acv35kpb/fDvkdGnBgm0gr1q1eKMwP5JlXJMcTN/LMm7INLcr91WXzuRgwYSciiKvz0FVOd8FUEber0TRfnsd4s4FTGLb2OIH/f4W5t+eS2Leeg019OlADvZOUUTk97+k3yqC8Ajl37YmjXytNR3SuEYN83AJIwON+MFMFVdfY8onyMvY+tnQqgVOy06qFnzycW4ZKrEcD0resLZim6J4Gr6FkG7F4+7EI7ZvWulmTz0RzA7WpJPCw7LH4pyEljqP0ofP92oXLpYUGn98cSyySSGCXv6/m8T9BavtpTy8N2DlTx9uDnEW2zibK0ssxRYGwCBAqGpXGGkQqPU9ccz6OzEP9wO5TJohJ9Ufo+XwyOTMyVzJUf48qlMgNN0FdUItxAO37+Yuj7rBz1Mct0UC2qO63gr0592yqP+8W1+Zvdn2R38heXTiLGoyJdDV30FJKczdTwtTUtEHo5cj1EDMECA28i6uton19OTPgchbbETe8Sg4AKhuS6tk61vepZ28jG3AA5/igigZP4f2gs7ejya7gVokAXpWOaYUXYNXHG4DWZk+CrGJqqNPGxkoauQB1RLhFOA=
    on_success: change
    on_failure: always
